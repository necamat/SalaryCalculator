// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryCalculator.Models;

namespace SalaryCalculator.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211001084316_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SalaryCalculator.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Adress");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("LastName");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("SalaryCalculator.Models.EmployeeSalary", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<double>("GrossSalary")
                        .HasColumnType("float")
                        .HasColumnName("GrossSalary");

                    b.Property<double>("HeltTaxEmployee")
                        .HasColumnType("float")
                        .HasColumnName("HeltTaxEmployee");

                    b.Property<double>("HeltTaxEmployer")
                        .HasColumnType("float")
                        .HasColumnName("HeltTaxEmployer");

                    b.Property<double>("NetSalary")
                        .HasColumnType("float")
                        .HasColumnName("NetSalary");

                    b.Property<double>("PioTaxEmployee")
                        .HasColumnType("float")
                        .HasColumnName("PioTaxEmployee");

                    b.Property<double>("PioTaxEmployer")
                        .HasColumnType("float")
                        .HasColumnName("PioTaxEmployer");

                    b.Property<double>("SuperGrossSalary")
                        .HasColumnType("float")
                        .HasColumnName("SuperGrossSalary");

                    b.Property<double>("Tax")
                        .HasColumnType("float")
                        .HasColumnName("Tax");

                    b.Property<double>("TaxableBase")
                        .HasColumnType("float")
                        .HasColumnName("TaxableBase");

                    b.Property<double>("UnemploymentTaxEmployee")
                        .HasColumnType("float")
                        .HasColumnName("UnemploymentTaxEmployee");

                    b.HasKey("Id");

                    b.ToTable("EmployeeSalary");
                });

            modelBuilder.Entity("SalaryCalculator.Models.EmployeeSalary", b =>
                {
                    b.HasOne("SalaryCalculator.Models.Employee", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("SalaryCalculator.Models.EmployeeSalary", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("SalaryCalculator.Models.Employee", b =>
                {
                    b.Navigation("Salary");
                });
#pragma warning restore 612, 618
        }
    }
}
